<?
include 'function-pre.php';

$name="onAgentDraw";

$declaration="
void __stdcall onAgentDraw(
    int x,              // x-coordinate of agent
    int y,              // y-coordinate of agent
    pState state,       // array of agent state variables
    unsigned short &r,  // red intensity
    unsigned short &g,  // green intensity
    unsigned short &b   // blue intensity
);
";

$parameters="
" . pt() . "x,y
" . pd() . "Coordinates of agent.
" . pt() . "state
" . pd() . "Array of agent state variables.
" . pt() . "r
" . pd() . "Intensity of red colour.  Passed by reference.
" . pt() . "g
" . pd() . "Intensity of green colour.  Passed by reference.
" . pt() . "b
" . pd() . "Intensity of blue colour.  Passed by reference.
";

$remarks="
This function must be provided by the model.  It is called by the simulation to set the drawing colour for each site of the portal, depending on the <tt>state</tt> of the agent at the site.  On enter <tt>r</tt>, <tt>g</tt> and <tt>b</tt> hold the colour after the last refresh and on exit they should hold the new colour values (each in the range 0..255).  Each site defaults to black (<tt>r,g,b</tt>)=(0,0,0) on simulation start.

<p>Note: it may seem more rational to assign each agent color state variables and have them updated simultaneously with the agent instead of providing this routine to update the color separately, but there is a reason for this approach: it is <i>potentially</i> faster.  Since the graphic updates are detached from agent updates (except at the fastest framerate) there could be many agent updates between every frame.  Performing all the calculations to set the agent color for frames which are never drawn would then be wasting CPU time.
</p>
";

$revisions="
API v1.5<ul><li>new!  Replaces <tt>colorAgent</tt>.
    </ul>
";

$example="
void __stdcall onAgentDraw(int x, int y, " . ref("pState") . " state, unsigned short &r, 
                           unsigned short &g, unsigned short &b)
{
    if (state[0]) { // alive
        b=255;                              // newborns start blue
        if (++r&gt;255) r=255; else return; // then go to violet
        if (++g&gt;255) g=255; else return; // finally go to white
    } else {
        // dead: fade to black
        if (r-- == 0) r=0;
        if (g-- == 0) g=0;
        if (b-- == 0) b=0;
    }
}
";

include 'function-post.php';
?>
